package homework_abstraction;

public class Employee {
	
	private String name;
	private Task currentTask;
	private static int hoursLeftForToday = 8;
	private static AllWork allWork;
	
	
	public Employee(String name){
		setName(name);
	}
	
	
	public void work(){
		if(this.currentTask == null || this.currentTask.getWorkingHoursToFinishTheTask() == 0){
			this.setCurrentTask(allWork.getNextTask());
			if(this.currentTask.getWorkingHoursToFinishTheTask() > this.getHoursLeftForToday()){
				this.currentTask.setWorkingHoursToFinishTheTask(this.getHoursLeftForToday() - this.getHoursLeftForToday());
				this.setHoursLeftForToday(0);
				return;
			}
			if(this.currentTask.getWorkingHoursToFinishTheTask() < this.getHoursLeftForToday()){
				this.currentTask.setWorkingHoursToFinishTheTask(0);
				this.setHoursLeftForToday(this.getHoursLeftForToday() - this.getHoursLeftForToday());
				return;
			}
			if(this.currentTask.getWorkingHoursToFinishTheTask() == this.getHoursLeftForToday()){
				this.currentTask.setWorkingHoursToFinishTheTask(0);
				this.setHoursLeftForToday(0);
				return;
			}
		}
		
		if(this.currentTask != null && this.currentTask.getWorkingHoursToFinishTheTask() != 0){
			
			if(this.currentTask.getWorkingHoursToFinishTheTask() > this.getHoursLeftForToday()){
				this.currentTask.setWorkingHoursToFinishTheTask(this.getHoursLeftForToday() - this.getHoursLeftForToday());
				this.setHoursLeftForToday(0);
				return;
			}
			if(this.currentTask.getWorkingHoursToFinishTheTask() < this.getHoursLeftForToday()){
				this.currentTask.setWorkingHoursToFinishTheTask(0);
				this.setHoursLeftForToday(this.getHoursLeftForToday() - this.getHoursLeftForToday());
				return;
			}
			if(this.currentTask.getWorkingHoursToFinishTheTask() == this.getHoursLeftForToday()){
				this.currentTask.setWorkingHoursToFinishTheTask(0);
				this.setHoursLeftForToday(0);
				return;
			}
			
		}
		
		if(this.currentTask != null && this.currentTask.getWorkingHoursToFinishTheTask() == 0){
			this.setCurrentTask(allWork.getNextTask());
			if(this.currentTask.getWorkingHoursToFinishTheTask() > this.getHoursLeftForToday()){
				this.currentTask.setWorkingHoursToFinishTheTask(this.getHoursLeftForToday() - this.getHoursLeftForToday());
				this.setHoursLeftForToday(0);
				return;
			}
			if(this.currentTask.getWorkingHoursToFinishTheTask() < this.getHoursLeftForToday()){
				this.currentTask.setWorkingHoursToFinishTheTask(0);
				this.setHoursLeftForToday(this.getHoursLeftForToday() - this.getHoursLeftForToday());
				return;
			}
			if(this.currentTask.getWorkingHoursToFinishTheTask() == this.getHoursLeftForToday()){
				this.currentTask.setWorkingHoursToFinishTheTask(0);
				this.setHoursLeftForToday(0);
				return;
			}
		}
	}
	
	
	public void startWorkingDay(){
		if(hoursLeftForToday == 0){
			setHoursLeftForToday(8);
		}
	}
	
	
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	
	
	public Task getCurrentTask() {
		return currentTask;
	}
	public void setCurrentTask(Task currentTask) {
		this.currentTask = currentTask;
	}

	
	public int getHoursLeftForToday() {
		return hoursLeftForToday;
	}
	public void setHoursLeftForToday(int hoursLeftForToday) {
		this.hoursLeftForToday = hoursLeftForToday;
	}
	
	
	public AllWork getAllWork(){
		return allWork;
	}
	public static void setAllWork(AllWork allwork){
		allWork = allwork;
	}
	
}
