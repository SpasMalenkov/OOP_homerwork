package library;

import java.io.PrintWriter;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.SortedSet;
import java.util.TreeMap;

public class Library {
	
	private Map<ReadingType, Map<String, List<ReadingMaterial>>> materials;
	private LibraryMan libraryMan;
	private int numberOfMaterials = 6;
	
	public Library(){
		libraryMan = new LibraryMan();
		libraryMan.start();
		
		materials = new HashMap<>();
		materials.put(ReadingType.BOOK, new TreeMap<>());
		materials.put(ReadingType.MAGAZINE, new TreeMap<>());
		materials.put(ReadingType.TEXTBOOK, new TreeMap<>());
		
		materials.get(ReadingType.BOOK).put("Istoricheski", 
				Arrays.asList(
						new Book("Ivan Vazov", "Pod igoto", "Prosveta", 
						LocalDateTime.of(1963, 11, 10, 3, 34)),
						new Book("Ekziuperi", "Malkia Princ", "Nov svqt", LocalDateTime.now())));
		materials.get(ReadingType.MAGAZINE).put("Modni", 
				Arrays.asList(
						new Magazine("Cosmos", "Anubis", LocalDateTime.now(), 3),
						new Magazine("Blqsuk", "Bulvest", LocalDateTime.now(), 5)));
		materials.get(ReadingType.TEXTBOOK).put("Matematika", 
				Arrays.asList(
						new TextBook("Algebra za 5 klas", "Anubis", "Ganio Hristev"),
						new TextBook("Stamat Stoynov", "Integrali za 3 klas", "Prosveta")));
		
	}
	
	public void showCatalog(ReadingType type){
		Map<String, List<ReadingMaterial>> catalog = materials.get(type);
		for(String category : catalog.keySet()){
			System.out.println(category + " : ");
			
			List<ReadingMaterial> list = catalog.get(category);
			list.sort(list.get(0).getComparator());
			
			for(ReadingMaterial rm : list){
				System.out.println(rm);
			}
		}
	}
	
	void getReadingMaterial(ReadingMaterial readingMaterial) throws LibraryException{
		if(readingMaterial != null && readingMaterial.canBeTaken() && 
				!readingMaterial.isTaken()){
			readingMaterial.takeIt(true);
			libraryMan.addMaterialToWatch(readingMaterial);
		}else{
			throw new LibraryException("Can take that right now!");
		}
	}
	
	public void returnReadingMaterial(ReadingMaterial readingMaterial){
		readingMaterial.takeIt(false);
		System.out.println("You have to pay this sum: " + libraryMan.getHowMuchIHaveToPayForThis(readingMaterial));
		libraryMan.removeMaterialToWatch(readingMaterial);
	}
	
	public int numberOfAvailableReadubgMaterials(){
		return numberOfMaterials - libraryMan.getNumberOfTakenMaterials();
	}
	
	public void logTakenMaterials(){
		SortedSet<ReadingMaterial> materials = libraryMan.getMaterialsByDateTaken();
		PrintWriter writer;
		try {
			writer = new PrintWriter("D:\\materials.txt", "UTF-8");

			System.out.println("Obsht broi vzeti " + materials.size());
			for (ReadingMaterial r : materials) {
				writer.println(r);
			}
			
			writer.close();
		} catch (FileNotFoundException | UnsupportedEncodingException e) {
			e.printStackTrace();
		}
	}
}
